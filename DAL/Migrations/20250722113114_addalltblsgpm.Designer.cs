// <auto-generated />
using System;
using DAL.Conexao;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(SGPMContext))]
    [Migration("20250722113114_addalltblsgpm")]
    partial class addalltblsgpm
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Model.Models.Facturacao.Menu", b =>
                {
                    b.Property<string>("MenuStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BadgeStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MenuPermissionsStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuStamp");

                    b.HasIndex("BadgeStamp");

                    b.HasIndex("LabelStamp");

                    b.HasIndex("MenuPermissionsStamp");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("Model.Models.Facturacao.MenuChildrenItem", b =>
                {
                    b.Property<string>("MenuChildrenItemStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MenuPermissionsStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentItemStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParentMenuStamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuChildrenItemStamp");

                    b.HasIndex("MenuPermissionsStamp");

                    b.HasIndex("ParentItemStamp");

                    b.HasIndex("ParentMenuStamp");

                    b.ToTable("MenuChildrenItems");
                });

            modelBuilder.Entity("Model.Models.Facturacao.MenuPermissions", b =>
                {
                    b.Property<string>("MenuPermissionsStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Except")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Only")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuPermissionsStamp");

                    b.ToTable("MenuPermission");
                });

            modelBuilder.Entity("Model.Models.Facturacao.MenuTag", b =>
                {
                    b.Property<string>("MenuTagStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuTagStamp");

                    b.ToTable("MenuTag");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Menuusr", b =>
                {
                    b.Property<string>("Menuusrstamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Menu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Userstamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Menuusrstamp");

                    b.ToTable("Menuusr");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Param", b =>
                {
                    b.Property<string>("Paramstamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Actualizapreco")
                        .HasColumnType("bit");

                    b.Property<decimal>("Ano")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AnoSem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Anolectivo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Anoref")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Aredondamento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Autoprecos")
                        .HasColumnType("bit");

                    b.Property<string>("Campomultiuso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codactivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codprod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodprodMascra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codsrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContaIrps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContaIrpsdesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contaiva85")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contaiva85desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contmascara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CriaContacc")
                        .HasColumnType("bit");

                    b.Property<bool>("Criacl")
                        .HasColumnType("bit");

                    b.Property<bool>("Criacontas")
                        .HasColumnType("bit");

                    b.Property<bool>("Criacontasprazo")
                        .HasColumnType("bit");

                    b.Property<bool>("Criafnc")
                        .HasColumnType("bit");

                    b.Property<bool>("Criape")
                        .HasColumnType("bit");

                    b.Property<bool>("Criast")
                        .HasColumnType("bit");

                    b.Property<bool>("Depmensais")
                        .HasColumnType("bit");

                    b.Property<bool>("DiarioAnonum")
                        .HasColumnType("bit");

                    b.Property<bool>("DiarioDiamesnum")
                        .HasColumnType("bit");

                    b.Property<bool>("DiarioMesNum")
                        .HasColumnType("bit");

                    b.Property<decimal>("Diastrab")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Dispensa")
                        .HasColumnType("bit");

                    b.Property<bool>("Duodessimos")
                        .HasColumnType("bit");

                    b.Property<bool>("EcranPosPequeno")
                        .HasColumnType("bit");

                    b.Property<string>("EmailRespo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emailtext")
                        .IsRequired()
                        .HasMaxLength(650)
                        .HasColumnType("nvarchar(650)");

                    b.Property<bool>("Escondecolprecos")
                        .HasColumnType("bit");

                    b.Property<bool>("Esconderef")
                        .HasColumnType("bit");

                    b.Property<bool>("Escondestock")
                        .HasColumnType("bit");

                    b.Property<bool>("Excluemascara")
                        .HasColumnType("bit");

                    b.Property<bool>("Exclui")
                        .HasColumnType("bit");

                    b.Property<bool>("Fillvalue")
                        .HasColumnType("bit");

                    b.Property<bool>("GeraGuiaAutomatica")
                        .HasColumnType("bit");

                    b.Property<decimal>("Horastrab")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ImprimeMultDocumento")
                        .HasColumnType("bit");

                    b.Property<bool>("Integracaoautomatica")
                        .HasColumnType("bit");

                    b.Property<bool>("Integradocs")
                        .HasColumnType("bit");

                    b.Property<decimal>("Intervalo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Ivaposdesconto")
                        .HasColumnType("bit");

                    b.Property<decimal>("Ivcodentr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ivcodsai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ivdescentr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ivdescsai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Localrdlc")
                        .HasColumnType("bit");

                    b.Property<string>("Mascaracl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mascfact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MatriculaComCCaberto")
                        .HasColumnType("bit");

                    b.Property<bool>("Modeloja")
                        .HasColumnType("bit");

                    b.Property<decimal>("Modulos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Montanumero")
                        .HasColumnType("bit");

                    b.Property<bool>("MostraProdutoSemStock")
                        .HasColumnType("bit");

                    b.Property<bool>("MostraTodasContas")
                        .HasColumnType("bit");

                    b.Property<bool>("Mostraccusto")
                        .HasColumnType("bit");

                    b.Property<bool>("Mostraendereco")
                        .HasColumnType("bit");

                    b.Property<bool>("Mostranib")
                        .HasColumnType("bit");

                    b.Property<bool>("Mostrarefornec")
                        .HasColumnType("bit");

                    b.Property<bool>("Naoaredonda")
                        .HasColumnType("bit");

                    b.Property<bool>("Naomostradatain")
                        .HasColumnType("bit");

                    b.Property<bool>("Naomostradatater")
                        .HasColumnType("bit");

                    b.Property<bool>("Naomostraduracao")
                        .HasColumnType("bit");

                    b.Property<bool>("Naomostrasequencia")
                        .HasColumnType("bit");

                    b.Property<bool>("NaoverificaNuit")
                        .HasColumnType("bit");

                    b.Property<decimal>("NumImpressao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nummascara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ObrigaBi")
                        .HasColumnType("bit");

                    b.Property<bool>("ObrigaNc")
                        .HasColumnType("bit");

                    b.Property<decimal>("Origem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Outgoingemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outgoingpassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Perlucro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("PermiteApagarPos")
                        .HasColumnType("bit");

                    b.Property<bool>("PjFechoautomatico")
                        .HasColumnType("bit");

                    b.Property<bool>("PoObrigatorio")
                        .HasColumnType("bit");

                    b.Property<bool>("Ponaorepete")
                        .HasColumnType("bit");

                    b.Property<decimal>("Posicao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Preconormal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Printfile")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Printfile2")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Prodenum")
                        .HasColumnType("bit");

                    b.Property<string>("Radicalfact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Removematricula")
                        .HasColumnType("bit");

                    b.Property<bool>("Segundavia")
                        .HasColumnType("bit");

                    b.Property<decimal>("Smtpport")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Smtpserver")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subjemail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxaInssemp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxaInsspe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipooperacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Totalinteiro")
                        .HasColumnType("bit");

                    b.Property<bool>("UsaLotes")
                        .HasColumnType("bit");

                    b.Property<bool>("UsaMultRefereciaSt")
                        .HasColumnType("bit");

                    b.Property<bool>("Usacademia")
                        .HasColumnType("bit");

                    b.Property<bool>("Usalocalreport")
                        .HasColumnType("bit");

                    b.Property<bool>("Usames")
                        .HasColumnType("bit");

                    b.Property<bool>("Usanumauto")
                        .HasColumnType("bit");

                    b.Property<bool>("Vendeservico")
                        .HasColumnType("bit");

                    b.HasKey("Paramstamp");

                    b.ToTable("Param");
                });

            modelBuilder.Entity("Model.Models.Facturacao.ParamImp", b =>
                {
                    b.Property<string>("ParamImpstamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Ccusto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Codccu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Normal1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Normal2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Padrao")
                        .HasColumnType("bit");

                    b.Property<string>("Paramstamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Pos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParamImpstamp");

                    b.HasIndex("Paramstamp");

                    b.ToTable("ParamImp");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Paramemail", b =>
                {
                    b.Property<string>("Paramemailstamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Codtipo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paramstamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Paramemailstamp");

                    b.HasIndex("Paramstamp");

                    b.ToTable("Paramemail");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Paramgct", b =>
                {
                    b.Property<string>("Paramgctstamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Codtipo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mascara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Padrao")
                        .HasColumnType("bit");

                    b.Property<string>("Paramstamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Paramgctstamp");

                    b.HasIndex("Paramstamp");

                    b.ToTable("Paramgct");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Parampv", b =>
                {
                    b.Property<string>("Parampvstamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Paramstamp")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Parampvstamp");

                    b.HasIndex("Paramstamp");

                    b.ToTable("Parampv");
                });

            modelBuilder.Entity("Model.Models.Facturacao.UsuarioMenu", b =>
                {
                    b.Property<string>("PaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MenuStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataAtribuicao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PaStamp", "MenuStamp");

                    b.HasIndex("MenuStamp");

                    b.ToTable("UsuarioMenus", (string)null);
                });

            modelBuilder.Entity("Model.Models.SGPM.Armazem", b =>
                {
                    b.Property<string>("armazemStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("localizacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numeroArmazem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("armazemStamp");

                    b.ToTable("Armazem");
                });

            modelBuilder.Entity("Model.Models.SGPM.Artigo", b =>
                {
                    b.Property<string>("artigoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("artigoGeralStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("artigogeral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codArtigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("complementar")
                        .HasColumnType("bit");

                    b.Property<bool?>("daraquedista")
                        .HasColumnType("bit");

                    b.Property<string>("descricaoartigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("desportivo")
                        .HasColumnType("bit");

                    b.Property<bool?>("domando")
                        .HasColumnType("bit");

                    b.Property<bool?>("fuzileiro")
                        .HasColumnType("bit");

                    b.Property<string>("grupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("norma")
                        .HasColumnType("int");

                    b.Property<bool?>("ofGen")
                        .HasColumnType("bit");

                    b.Property<bool?>("ofSub")
                        .HasColumnType("bit");

                    b.Property<bool?>("ofSup")
                        .HasColumnType("bit");

                    b.Property<string>("orgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("piloto")
                        .HasColumnType("bit");

                    b.Property<bool?>("policiaMilitar")
                        .HasColumnType("bit");

                    b.Property<bool?>("praca")
                        .HasColumnType("bit");

                    b.Property<bool?>("sargento")
                        .HasColumnType("bit");

                    b.Property<string>("sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tempoUtil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tempoutilMesesAnos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("unidCerimonial")
                        .HasColumnType("bit");

                    b.Property<bool?>("unifTrabalho")
                        .HasColumnType("bit");

                    b.HasKey("artigoStamp");

                    b.HasIndex("artigoGeralStamp");

                    b.ToTable("Artigo");
                });

            modelBuilder.Entity("Model.Models.SGPM.ArtigoContrato", b =>
                {
                    b.Property<string>("artigoContratoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("artigoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("contratoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<int?>("tamanho")
                        .HasColumnType("int");

                    b.HasKey("artigoContratoStamp");

                    b.HasIndex("artigoStamp");

                    b.HasIndex("contratoStamp");

                    b.ToTable("ArtigoContrato");
                });

            modelBuilder.Entity("Model.Models.SGPM.ArtigoGeral", b =>
                {
                    b.Property<string>("artigoGeralStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("u_m")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("artigoGeralStamp");

                    b.ToTable("ArtigoGeral");
                });

            modelBuilder.Entity("Model.Models.SGPM.CodCarta", b =>
                {
                    b.Property<string>("codCartaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.HasKey("codCartaStamp");

                    b.ToTable("CodCarta");
                });

            modelBuilder.Entity("Model.Models.SGPM.Contrato", b =>
                {
                    b.Property<string>("contratoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("abreviaturaFornecedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricaocontrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fornecedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("nrContrato")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("contratoStamp");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("Model.Models.SGPM.Curso", b =>
                {
                    b.Property<string>("cursoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("abreviatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codCurso")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("tipo")
                        .HasColumnType("bit");

                    b.HasKey("cursoStamp");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("Model.Models.SGPM.Desconto", b =>
                {
                    b.Property<string>("descontoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codDesconto")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("obsDesconto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("percentgDesconto")
                        .HasColumnType("int");

                    b.HasKey("descontoStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("Desconto");
                });

            modelBuilder.Entity("Model.Models.SGPM.Email", b =>
                {
                    b.Property<string>("emailStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codEmail")
                        .HasColumnType("int");

                    b.Property<string>("email1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("emailStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("Model.Models.SGPM.Entrada", b =>
                {
                    b.Property<string>("entradaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NumeroParaImpressao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("dataEntrada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("existenciaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("numeroContrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroGR")
                        .HasColumnType("int");

                    b.Property<string>("orgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("pTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("pUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<string>("unidadeStamp")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("entradaStamp");

                    b.HasIndex("existenciaStamp");

                    b.HasIndex("unidadeStamp");

                    b.ToTable("Entrada");
                });

            modelBuilder.Entity("Model.Models.SGPM.Entrega", b =>
                {
                    b.Property<string>("fornecimentoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("dataEntrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.HasKey("fornecimentoStamp");

                    b.ToTable("Entrega");
                });

            modelBuilder.Entity("Model.Models.SGPM.Escalao", b =>
                {
                    b.Property<string>("escalaoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ESCALÃO_I")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESCALÃO_II")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESCALÃO_III")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESCALÃO_IV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ESCALÃO_V")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codEscalao")
                        .HasColumnType("int");

                    b.Property<string>("escalaoUcerm1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patStamp")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("patente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("escalaoStamp");

                    b.HasIndex("patStamp");

                    b.ToTable("Escalao");
                });

            modelBuilder.Entity("Model.Models.SGPM.Especial", b =>
                {
                    b.Property<string>("especialStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codEspecial")
                        .HasColumnType("int");

                    b.Property<int>("codRamo")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("ramo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("especialStamp");

                    b.ToTable("Especial");
                });

            modelBuilder.Entity("Model.Models.SGPM.Especie", b =>
                {
                    b.Property<string>("especieStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("graus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.HasKey("especieStamp");

                    b.ToTable("Especie");
                });

            modelBuilder.Entity("Model.Models.SGPM.Existencia", b =>
                {
                    b.Property<string>("existenciaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("armazemStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("artigoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("quantidadeActual")
                        .HasColumnType("int");

                    b.Property<string>("tamanho")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("existenciaStamp");

                    b.HasIndex("artigoStamp");

                    b.ToTable("Existencia");
                });

            modelBuilder.Entity("Model.Models.SGPM.Fornecedor", b =>
                {
                    b.Property<string>("fornecedorStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fornecedorAbreviatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fornecedorContacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fornecedorNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.HasKey("fornecedorStamp");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("Model.Models.SGPM.Fornecimento", b =>
                {
                    b.Property<string>("fornecimentoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NomeOrgaoUnidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("dataFornecimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("existenciaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<bool>("jarecebeu")
                        .HasColumnType("bit");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("numeroGR")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<string>("subunidadeStamp")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("unidadeStamp")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("fornecimentoStamp");

                    b.HasIndex("existenciaStamp");

                    b.HasIndex("milStamp");

                    b.HasIndex("subunidadeStamp");

                    b.HasIndex("unidadeStamp");

                    b.ToTable("Fornecimento");
                });

            modelBuilder.Entity("Model.Models.SGPM.Instituicao", b =>
                {
                    b.Property<string>("instituicaoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codDistrito")
                        .HasColumnType("int");

                    b.Property<int>("codInstituicao")
                        .HasColumnType("int");

                    b.Property<int?>("codPostoAdm")
                        .HasColumnType("int");

                    b.Property<int>("codProvincia")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("postoAdm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("tipoInstituicao")
                        .HasColumnType("bit");

                    b.HasKey("instituicaoStamp");

                    b.ToTable("Instituicao");
                });

            modelBuilder.Entity("Model.Models.SGPM.Licenca", b =>
                {
                    b.Property<string>("licencaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codLicenca")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipoLicenca")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("licencaStamp");

                    b.ToTable("Licenca");
                });

            modelBuilder.Entity("Model.Models.SGPM.Mil", b =>
                {
                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("adquirEspecial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("centroTreino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codIncDist")
                        .HasColumnType("int");

                    b.Property<int?>("codIncLocalidade")
                        .HasColumnType("int");

                    b.Property<int?>("codIncPostAdm")
                        .HasColumnType("int");

                    b.Property<int>("codIncProv")
                        .HasColumnType("int");

                    b.Property<int>("codNascDist")
                        .HasColumnType("int");

                    b.Property<int?>("codNascLocalidade")
                        .HasColumnType("int");

                    b.Property<int>("codNascPostAdm")
                        .HasColumnType("int");

                    b.Property<int>("codNascProv")
                        .HasColumnType("int");

                    b.Property<int>("codRamo")
                        .HasColumnType("int");

                    b.Property<int>("codResDist")
                        .HasColumnType("int");

                    b.Property<int?>("codResLocal")
                        .HasColumnType("int");

                    b.Property<int>("codResPostAdm")
                        .HasColumnType("int");

                    b.Property<int>("codResProv")
                        .HasColumnType("int");

                    b.Property<string>("conjuge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cursoTreino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataCasamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duracaoTreino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estCivil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grupSangue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("habiLite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incDist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incPais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incPosto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("incProv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inicioTreino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("mae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nacional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nascData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nascDist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nascLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nascPais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nascPosto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nascPov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nascProv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("nim")
                        .HasColumnType("bigint");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numCasa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("numFilhos")
                        .HasColumnType("int");

                    b.Property<string>("pai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ramo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regCasamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resAvenida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resBairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resDist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resLocalidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resPosto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resProv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resQuarteirao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("terminoTreino")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milStamp");

                    b.ToTable("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilAgre", b =>
                {
                    b.Property<string>("milAgreStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilAgre")
                        .HasColumnType("int");

                    b.Property<int?>("codNascProv")
                        .HasColumnType("int");

                    b.Property<int?>("codResDist")
                        .HasColumnType("int");

                    b.Property<int?>("codResLocal")
                        .HasColumnType("int");

                    b.Property<int?>("codResPostAdm")
                        .HasColumnType("int");

                    b.Property<int?>("codResProv")
                        .HasColumnType("int");

                    b.Property<string>("grau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nascData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nascProv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resBairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resDist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resPosto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resProv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("telefone")
                        .HasColumnType("bigint");

                    b.HasKey("milAgreStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilAgre");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilConde", b =>
                {
                    b.Property<string>("milCondeStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilConde")
                        .HasColumnType("int");

                    b.Property<string>("dataGalardoacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("galardoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grauMedalha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milCondeStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilConde");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilDoc", b =>
                {
                    b.Property<string>("milDocStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilDoc")
                        .HasColumnType("int");

                    b.Property<string>("dataemissao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("datavalid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("localemissao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numeroDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milDocStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilDoc");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilEmFor", b =>
                {
                    b.Property<string>("milEmForStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("adquirEspecial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("anoFrequentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codDistrito")
                        .HasColumnType("int");

                    b.Property<int>("codLocalidade")
                        .HasColumnType("int");

                    b.Property<int>("codMilEmFor")
                        .HasColumnType("int");

                    b.Property<int>("codPostoAdm")
                        .HasColumnType("int");

                    b.Property<int>("codPpais")
                        .HasColumnType("int");

                    b.Property<int>("codProvincia")
                        .HasColumnType("int");

                    b.Property<string>("curso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duracaoNormal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("instituicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nivelAtingir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postoAdm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("tipo")
                        .HasColumnType("bit");

                    b.Property<bool>("tipoInstituicao")
                        .HasColumnType("bit");

                    b.HasKey("milEmForStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilEmFor");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilEmail", b =>
                {
                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("emailStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.HasKey("milStamp");

                    b.ToTable("MilEmail");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilEspecial", b =>
                {
                    b.Property<string>("milEspecialStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codEspecial")
                        .HasColumnType("int");

                    b.Property<int>("codMilEspecial")
                        .HasColumnType("int");

                    b.Property<int>("codRamo")
                        .HasColumnType("int");

                    b.Property<int?>("codSubEspecial")
                        .HasColumnType("int");

                    b.Property<string>("dataEspecial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especialStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ramo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subEspecial")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milEspecialStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilEspecial");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilFa", b =>
                {
                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("circunstancias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codMilFa")
                        .HasColumnType("int");

                    b.Property<string>("enterroData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("enterroLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("falecData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("falecLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("numCampa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numCertObito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milStamp");

                    b.ToTable("MilFa");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilFor", b =>
                {
                    b.Property<string>("milForStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilFor")
                        .HasColumnType("int");

                    b.Property<int>("codPais")
                        .HasColumnType("int");

                    b.Property<string>("curso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("instituicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nivel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("tipoFormacao")
                        .HasColumnType("bit");

                    b.Property<bool>("tipoInstituicao")
                        .HasColumnType("bit");

                    b.HasKey("milForStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilFor");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilFot", b =>
                {
                    b.Property<string>("milFotStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("caminho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("milFotStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilFot");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilFuncao", b =>
                {
                    b.Property<string>("milFuncaoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilFuncao")
                        .HasColumnType("int");

                    b.Property<string>("dataInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("funcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orgaoStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade1Stamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade2Stamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidadeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidadeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milFuncaoStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilFuncao");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilIDigital", b =>
                {
                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("caminhoIndicadorD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("caminhoIndicadorE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("caminhoPolegarD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("caminhoPolegarE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("indicadorD")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("indicadorE")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("polegarD")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("polegarE")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("milStamp");

                    b.ToTable("MilIDigital");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilLice", b =>
                {
                    b.Property<string>("milLiceStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilLice")
                        .HasColumnType("int");

                    b.Property<string>("dataTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("licenca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licencaData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("licencaStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milLiceStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilLice");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilLingua", b =>
                {
                    b.Property<string>("milLinguaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilLingua")
                        .HasColumnType("int");

                    b.Property<string>("compreensao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("escrita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fala")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("leitura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lingua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("materna")
                        .HasColumnType("bit");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("milLinguaStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilLingua");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilMed", b =>
                {
                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("altura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ancas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("braco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("cabeca")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("calcado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("cintura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("codMil")
                        .HasColumnType("int");

                    b.Property<decimal?>("entrepernas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ombros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("peito")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("pescoco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("milStamp");

                    b.ToTable("MilMed");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilPeEmerg", b =>
                {
                    b.Property<string>("milPeEmergStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilPeEmerg")
                        .HasColumnType("int");

                    b.Property<int>("codNascProv")
                        .HasColumnType("int");

                    b.Property<int>("codResDist")
                        .HasColumnType("int");

                    b.Property<int?>("codResLocal")
                        .HasColumnType("int");

                    b.Property<int?>("codResPostAdm")
                        .HasColumnType("int");

                    b.Property<int>("codResProv")
                        .HasColumnType("int");

                    b.Property<string>("grau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("nascProv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numCasa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resAvenida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resBairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resDist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resLocal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resPosto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resProv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resQuarteirao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milPeEmergStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilPeEmerg");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilProm", b =>
                {
                    b.Property<string>("milPromStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codMilProm")
                        .HasColumnType("int");

                    b.Property<string>("dataOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("patente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoPromocao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milPromStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilProm");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilRea", b =>
                {
                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilRea")
                        .HasColumnType("int");

                    b.Property<string>("dataOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("destino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milStamp");

                    b.ToTable("MilRea");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilReco", b =>
                {
                    b.Property<string>("milRecoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilReco")
                        .HasColumnType("int");

                    b.Property<string>("concessaoDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipoDistincao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milRecoStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilReco");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilReg", b =>
                {
                    b.Property<string>("milRegStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("codReg")
                        .HasColumnType("int");

                    b.Property<string>("dataReg")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milRegStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilReg");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilRetReaSal", b =>
                {
                    b.Property<string>("milRetReaSalStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilRetReaSal")
                        .HasColumnType("int");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reactivacaoData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("retencaoData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidadeSalario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milRetReaSalStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilRetReaSal");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSa", b =>
                {
                    b.Property<string>("milSaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("cirurgiaSofrida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codMilSa")
                        .HasColumnType("int");

                    b.Property<string>("datainicioDoenca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doencaSofre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doencaSofrida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("motivoDoenca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milSaStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilSa");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSalMensal", b =>
                {
                    b.Property<string>("milSalMensalStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("ano")
                        .HasColumnType("int");

                    b.Property<decimal>("bonusEspecial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("contaBanco")
                        .HasColumnType("bigint");

                    b.Property<decimal>("desconto2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("desconto7")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("escalao1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("escalao2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("escalao3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("escalao4")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("escalao5")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("especialidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("forcaEspecial40")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("forcaEspecial50")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("forcaEspecial60")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("liquidoActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("liquidoRecebe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("mes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("nim")
                        .HasColumnType("bigint");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("outroSubsidio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("patente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("regime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("sQTC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subAlimentacao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subSaudeMG95")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subSaudeRisco15")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subSaudeSCET25")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subSaudeSEXC40")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subSaudeTSS75")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subTrinta30")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("subsPosto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("suplementoChefia25")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("suplementoRisco15")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("suplementoSCET10")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalBonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("totalDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("milSalMensalStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilSalMensal");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSalario", b =>
                {
                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("escalao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("nib")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nivelSalarial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nrConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("recebePatente")
                        .HasColumnType("bit");

                    b.Property<bool?>("recebeSqtc")
                        .HasColumnType("bit");

                    b.Property<string>("sQTC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("saudeMilitar")
                        .HasColumnType("bit");

                    b.Property<bool?>("uCerimonial")
                        .HasColumnType("bit");

                    b.HasKey("milStamp");

                    b.ToTable("MilSalario");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSit", b =>
                {
                    b.Property<string>("milSitStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilSit")
                        .HasColumnType("int");

                    b.Property<string>("dataOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situacao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milSitStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilSit");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSitCrim", b =>
                {
                    b.Property<string>("milSitCrimStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilSitCrim")
                        .HasColumnType("int");

                    b.Property<string>("condenacaoData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detencaoData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("infraccao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("localPrisao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numDocSoltura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numProcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("processodata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("solturaData")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milSitCrimStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilSitCrim");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSitDisc", b =>
                {
                    b.Property<string>("milSitDiscStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilSitDisc")
                        .HasColumnType("int");

                    b.Property<string>("dataInicioMedida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataProcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataTerminoMedida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("infracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("medTomadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numProcesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orgao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milSitDiscStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilSitDisc");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSitQPActivo", b =>
                {
                    b.Property<string>("milSitQPActivoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codMilSitQPActivo")
                        .HasColumnType("int");

                    b.Property<string>("dataOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("localFuncao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("situacaoQpAtivo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milSitQPActivoStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("MilSitQPActivo");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSubEspecial", b =>
                {
                    b.Property<string>("milSubEspecialStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Obs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubespecialStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataSubEspecial")
                        .HasColumnType("datetime2");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milEspecialStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("numOS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("milSubEspecialStamp");

                    b.HasIndex("milEspecialStamp");

                    b.ToTable("MilSubEspecial");
                });

            modelBuilder.Entity("Model.Models.SGPM.QualifcTecnica", b =>
                {
                    b.Property<string>("qualifcTecnicaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Com_Mais_de_10_anos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codQualifTecnica")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grupoSalarial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("nível_I")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("nível_II")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("nível_III")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("nível_IV")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("qualifcTecnicaStamp");

                    b.ToTable("QualifcTecnica");
                });

            modelBuilder.Entity("Model.Models.SGPM.Reg", b =>
                {
                    b.Property<string>("regStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("abreviatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codReg")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.HasKey("regStamp");

                    b.ToTable("Reg");
                });

            modelBuilder.Entity("Model.Models.SGPM.SubEspecial", b =>
                {
                    b.Property<string>("subEspecialStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codEspecial")
                        .HasColumnType("int");

                    b.Property<int>("codSubespecial")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especialStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("especialidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.HasKey("subEspecialStamp");

                    b.HasIndex("especialStamp");

                    b.ToTable("SubEspecial");
                });

            modelBuilder.Entity("Model.Models.SGPM.Subsidio", b =>
                {
                    b.Property<string>("subsidioStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codSubsidio")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("obsSubsidio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("percentgSubsidio")
                        .HasColumnType("int");

                    b.HasKey("subsidioStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("Subsidio");
                });

            modelBuilder.Entity("Model.Models.SGPM.Subunidade1", b =>
                {
                    b.Property<string>("subunidade1Stamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codDistrito")
                        .HasColumnType("int");

                    b.Property<int>("codLocalidade")
                        .HasColumnType("int");

                    b.Property<string>("codOrgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codPostoAdm")
                        .HasColumnType("int");

                    b.Property<int>("codProvincia")
                        .HasColumnType("int");

                    b.Property<int>("codSubunidade1")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organica")
                        .HasColumnType("int");

                    b.Property<string>("orgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postoAdm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidadeStamp")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("totalAlf")
                        .HasColumnType("int");

                    b.Property<int>("totalAlfMil")
                        .HasColumnType("int");

                    b.Property<int>("totalCap")
                        .HasColumnType("int");

                    b.Property<int>("totalCor")
                        .HasColumnType("int");

                    b.Property<int>("totalFur")
                        .HasColumnType("int");

                    b.Property<int>("totalInt")
                        .HasColumnType("int");

                    b.Property<int>("totalMaj")
                        .HasColumnType("int");

                    b.Property<int?>("totalOf")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSub")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSup")
                        .HasColumnType("int");

                    b.Property<int>("totalPra")
                        .HasColumnType("int");

                    b.Property<int>("totalPriCab")
                        .HasColumnType("int");

                    b.Property<int>("totalPriSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSarg")
                        .HasColumnType("int");

                    b.Property<int>("totalSegCab")
                        .HasColumnType("int");

                    b.Property<int>("totalSegSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSold")
                        .HasColumnType("int");

                    b.Property<int>("totalSub")
                        .HasColumnType("int");

                    b.Property<int>("totalTerSar")
                        .HasColumnType("int");

                    b.Property<int>("totalTte")
                        .HasColumnType("int");

                    b.Property<int>("totalTteCor")
                        .HasColumnType("int");

                    b.Property<int>("totalTteMil")
                        .HasColumnType("int");

                    b.Property<string>("unidade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subunidade1Stamp");

                    b.HasIndex("subunidadeStamp");

                    b.ToTable("Subunidade1");
                });

            modelBuilder.Entity("Model.Models.SGPM.Subunidade2", b =>
                {
                    b.Property<string>("subunidade2Stamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Subunidade11subunidade1Stamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codDistrito")
                        .HasColumnType("int");

                    b.Property<int>("codLocalidade")
                        .HasColumnType("int");

                    b.Property<int>("codOrgao")
                        .HasColumnType("int");

                    b.Property<int>("codPostoAdm")
                        .HasColumnType("int");

                    b.Property<int>("codProvincia")
                        .HasColumnType("int");

                    b.Property<int>("codSubunidade2")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("localidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postoAdm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("subunidade1Stamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalAlf")
                        .HasColumnType("int");

                    b.Property<int>("totalAlfMil")
                        .HasColumnType("int");

                    b.Property<int>("totalCap")
                        .HasColumnType("int");

                    b.Property<int>("totalCor")
                        .HasColumnType("int");

                    b.Property<int>("totalFur")
                        .HasColumnType("int");

                    b.Property<int>("totalInt")
                        .HasColumnType("int");

                    b.Property<int>("totalMaj")
                        .HasColumnType("int");

                    b.Property<int>("totalOf")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSub")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSup")
                        .HasColumnType("int");

                    b.Property<int>("totalPra")
                        .HasColumnType("int");

                    b.Property<int>("totalPriCab")
                        .HasColumnType("int");

                    b.Property<int>("totalPriSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSarg")
                        .HasColumnType("int");

                    b.Property<int>("totalSegCab")
                        .HasColumnType("int");

                    b.Property<int>("totalSegSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSold")
                        .HasColumnType("int");

                    b.Property<int>("totalSub")
                        .HasColumnType("int");

                    b.Property<int>("totalTerSar")
                        .HasColumnType("int");

                    b.Property<int>("totalTte")
                        .HasColumnType("int");

                    b.Property<int>("totalTteCor")
                        .HasColumnType("int");

                    b.Property<int>("totalTteMil")
                        .HasColumnType("int");

                    b.Property<string>("unidade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subunidade2Stamp");

                    b.HasIndex("Subunidade11subunidade1Stamp");

                    b.ToTable("Subunidade2");
                });

            modelBuilder.Entity("Model.Models.SGPM.Suplemento", b =>
                {
                    b.Property<string>("suplementoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("codSuplemento")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("obsSuplemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("percentgSuplemento")
                        .HasColumnType("int");

                    b.HasKey("suplementoStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("Suplemento");
                });

            modelBuilder.Entity("Model.Models.SGPM.Telefone", b =>
                {
                    b.Property<string>("telefoneStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("alterouDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("codTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("inseriuDataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("milPeEmergStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("milStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("telefone1")
                        .HasColumnType("bigint");

                    b.HasKey("telefoneStamp");

                    b.HasIndex("milStamp");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("Model.Models.SJM.Busca", b =>
                {
                    b.Property<string>("buscaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("codBusca")
                        .HasColumnType("bigint");

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numTabela")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("buscaStamp");

                    b.ToTable("Busca");
                });

            modelBuilder.Entity("Model.Models.SJM.Cat", b =>
                {
                    b.Property<string>("CatStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("alterou")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("classeMil")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codCat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codCategoria")
                        .HasColumnType("int");

                    b.Property<int>("codRamo")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ramo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CatStamp");

                    b.ToTable("Cat");
                });

            modelBuilder.Entity("Model.Models.SJM.Distrito", b =>
                {
                    b.Property<string>("distritoStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("alterou")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codDistrito")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codProv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provinciaStamp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("distritoStamp");

                    b.ToTable("Distrito");
                });

            modelBuilder.Entity("Model.Models.SJM.Localidade", b =>
                {
                    b.Property<string>("localidadeStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("alterou")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codLocalidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codPostoAdm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("postAdmStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("localidadeStamp");

                    b.HasIndex("postAdmStamp");

                    b.ToTable("Localidade");
                });

            modelBuilder.Entity("Model.Models.SJM.Orgao", b =>
                {
                    b.Property<string>("orgaoStamp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("alterou")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codOrgao")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organica")
                        .HasColumnType("int");

                    b.Property<int>("totalAlf")
                        .HasColumnType("int");

                    b.Property<int>("totalAlfMil")
                        .HasColumnType("int");

                    b.Property<int>("totalBrigadeiro")
                        .HasColumnType("int");

                    b.Property<int>("totalCap")
                        .HasColumnType("int");

                    b.Property<int>("totalCor")
                        .HasColumnType("int");

                    b.Property<int>("totalFur")
                        .HasColumnType("int");

                    b.Property<int>("totalGenEx")
                        .HasColumnType("int");

                    b.Property<int>("totalInt")
                        .HasColumnType("int");

                    b.Property<int>("totalMaj")
                        .HasColumnType("int");

                    b.Property<int>("totalMajGen")
                        .HasColumnType("int");

                    b.Property<int>("totalOf")
                        .HasColumnType("int");

                    b.Property<int>("totalOfGen")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSub")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSup")
                        .HasColumnType("int");

                    b.Property<int>("totalPra")
                        .HasColumnType("int");

                    b.Property<int>("totalPriCab")
                        .HasColumnType("int");

                    b.Property<int>("totalPriSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSarg")
                        .HasColumnType("int");

                    b.Property<int>("totalSegCab")
                        .HasColumnType("int");

                    b.Property<int>("totalSegSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSold")
                        .HasColumnType("int");

                    b.Property<int>("totalSub")
                        .HasColumnType("int");

                    b.Property<int>("totalTerSar")
                        .HasColumnType("int");

                    b.Property<int>("totalTte")
                        .HasColumnType("int");

                    b.Property<int>("totalTteCor")
                        .HasColumnType("int");

                    b.Property<int>("totalTteGen")
                        .HasColumnType("int");

                    b.Property<int>("totalTteMil")
                        .HasColumnType("int");

                    b.HasKey("orgaoStamp");

                    b.ToTable("Orgao");
                });

            modelBuilder.Entity("Model.Models.SJM.Pais", b =>
                {
                    b.Property<string>("paisStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("abreviatura")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterou")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codPais")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nacional")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pordefeito")
                        .HasColumnType("bit");

                    b.HasKey("paisStamp");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("Model.Models.SJM.ParamAno", b =>
                {
                    b.Property<string>("ParamAnoStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Alterou")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlterouDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ano")
                        .HasColumnType("datetime2");

                    b.Property<string>("Inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParamAnoStamp");

                    b.ToTable("ParamAno");
                });

            modelBuilder.Entity("Model.Models.SJM.Pat", b =>
                {
                    b.Property<string>("patStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("alterou")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("catStamp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("classeMil")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("codCategoria")
                        .HasColumnType("int");

                    b.Property<int>("codPat")
                        .HasColumnType("int");

                    b.Property<int>("codPatente")
                        .HasColumnType("int");

                    b.Property<int>("codRamo")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ramo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("patStamp");

                    b.ToTable("Pat");
                });

            modelBuilder.Entity("Model.Models.SJM.PermForm", b =>
                {
                    b.Property<int>("permFormStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("permFormStamp"));

                    b.Property<string>("alterou")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricaoNodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricaoNodoFilho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricaoNodoFilhoFILho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paStamp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("permFormStamp");

                    b.ToTable("PermForm");
                });

            modelBuilder.Entity("Model.Models.SJM.Permissao", b =>
                {
                    b.Property<string>("permissaoStamp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("alterar")
                        .HasColumnType("bit");

                    b.Property<string>("alterou")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("apagar")
                        .HasColumnType("bit");

                    b.Property<bool>("consultar")
                        .HasColumnType("bit");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("imprimir")
                        .HasColumnType("bit");

                    b.Property<bool>("inserir")
                        .HasColumnType("bit");

                    b.Property<string>("inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeFormulario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paStamp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("permissaoStamp");

                    b.ToTable("Permissao");
                });

            modelBuilder.Entity("Model.Models.SJM.PostAdm", b =>
                {
                    b.Property<string>("postAdmStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("alterou")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codDistrito")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codPostoAdm")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distritoStamp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("postAdmStamp");

                    b.HasIndex("distritoStamp");

                    b.ToTable("PostAdm");
                });

            modelBuilder.Entity("Model.Models.SJM.Provincia", b =>
                {
                    b.Property<string>("provinciaStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("alterou")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codProv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paisStamp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("provinciaStamp");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("Model.Models.SJM.Ramo", b =>
                {
                    b.Property<string>("RamoStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Alterou")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlterouDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodRamo")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inseriu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InseriuDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Organica")
                        .HasColumnType("int");

                    b.Property<int>("TotalAlf")
                        .HasColumnType("int");

                    b.Property<int>("TotalAlfMil")
                        .HasColumnType("int");

                    b.Property<int>("TotalBrigadeiro")
                        .HasColumnType("int");

                    b.Property<int>("TotalCap")
                        .HasColumnType("int");

                    b.Property<int>("TotalCor")
                        .HasColumnType("int");

                    b.Property<int>("TotalFur")
                        .HasColumnType("int");

                    b.Property<int>("TotalGenEx")
                        .HasColumnType("int");

                    b.Property<int>("TotalInt")
                        .HasColumnType("int");

                    b.Property<int>("TotalMaj")
                        .HasColumnType("int");

                    b.Property<int>("TotalMajGen")
                        .HasColumnType("int");

                    b.Property<int>("TotalOf")
                        .HasColumnType("int");

                    b.Property<int>("TotalOfGen")
                        .HasColumnType("int");

                    b.Property<int>("TotalOfSub")
                        .HasColumnType("int");

                    b.Property<int>("TotalOfSup")
                        .HasColumnType("int");

                    b.Property<int>("TotalPra")
                        .HasColumnType("int");

                    b.Property<int>("TotalPriCab")
                        .HasColumnType("int");

                    b.Property<int>("TotalPriSar")
                        .HasColumnType("int");

                    b.Property<int>("TotalSarg")
                        .HasColumnType("int");

                    b.Property<int>("TotalSegCab")
                        .HasColumnType("int");

                    b.Property<int>("TotalSegSar")
                        .HasColumnType("int");

                    b.Property<int>("TotalSold")
                        .HasColumnType("int");

                    b.Property<int>("TotalSub")
                        .HasColumnType("int");

                    b.Property<int>("TotalTerSar")
                        .HasColumnType("int");

                    b.Property<int>("TotalTte")
                        .HasColumnType("int");

                    b.Property<int>("TotalTteCor")
                        .HasColumnType("int");

                    b.Property<int>("TotalTteGen")
                        .HasColumnType("int");

                    b.Property<int>("TotalTteMil")
                        .HasColumnType("int");

                    b.HasKey("RamoStamp");

                    b.ToTable("Ramo");
                });

            modelBuilder.Entity("Model.Models.SJM.Subunidade", b =>
                {
                    b.Property<string>("subunidadeStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("alterou")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("cibm")
                        .HasColumnType("bit");

                    b.Property<int>("codDistrito")
                        .HasColumnType("int");

                    b.Property<int>("codLocalidade")
                        .HasColumnType("int");

                    b.Property<int>("codPostoAdm")
                        .HasColumnType("int");

                    b.Property<int>("codProvincia")
                        .HasColumnType("int");

                    b.Property<int>("codUnidade")
                        .HasColumnType("int");

                    b.Property<int>("codsubunidade")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distrito")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estabEnsino")
                        .HasColumnType("bit");

                    b.Property<string>("inseriu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("localidade")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organica")
                        .HasColumnType("int");

                    b.Property<string>("postoAdm")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalAlf")
                        .HasColumnType("int");

                    b.Property<int>("totalAlfMil")
                        .HasColumnType("int");

                    b.Property<int>("totalBrigadeiro")
                        .HasColumnType("int");

                    b.Property<int>("totalCap")
                        .HasColumnType("int");

                    b.Property<int>("totalCor")
                        .HasColumnType("int");

                    b.Property<int>("totalFur")
                        .HasColumnType("int");

                    b.Property<int>("totalGenEx")
                        .HasColumnType("int");

                    b.Property<int>("totalInt")
                        .HasColumnType("int");

                    b.Property<int>("totalMaj")
                        .HasColumnType("int");

                    b.Property<int>("totalMajGen")
                        .HasColumnType("int");

                    b.Property<int>("totalOf")
                        .HasColumnType("int");

                    b.Property<int>("totalOfGen")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSub")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSup")
                        .HasColumnType("int");

                    b.Property<int>("totalPra")
                        .HasColumnType("int");

                    b.Property<int>("totalPriCab")
                        .HasColumnType("int");

                    b.Property<int>("totalPriSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSarg")
                        .HasColumnType("int");

                    b.Property<int>("totalSegCab")
                        .HasColumnType("int");

                    b.Property<int>("totalSegSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSold")
                        .HasColumnType("int");

                    b.Property<int>("totalSub")
                        .HasColumnType("int");

                    b.Property<int>("totalTerSar")
                        .HasColumnType("int");

                    b.Property<int>("totalTte")
                        .HasColumnType("int");

                    b.Property<int>("totalTteCor")
                        .HasColumnType("int");

                    b.Property<int>("totalTteGen")
                        .HasColumnType("int");

                    b.Property<int>("totalTteMil")
                        .HasColumnType("int");

                    b.Property<bool>("unidSubordCentral")
                        .HasColumnType("bit");

                    b.Property<string>("unidade")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidadeStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("zona")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subunidadeStamp");

                    b.HasIndex("unidadeStamp");

                    b.ToTable("Subunidade");
                });

            modelBuilder.Entity("Model.Models.SJM.Unidade", b =>
                {
                    b.Property<string>("unidadeStamp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Pco")
                        .HasColumnType("bit");

                    b.Property<string>("alterou")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("alterouDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("cibm")
                        .HasColumnType("bit");

                    b.Property<int?>("codDistrito")
                        .HasColumnType("int");

                    b.Property<int?>("codLocalidade")
                        .HasColumnType("int");

                    b.Property<int>("codOrgao")
                        .HasColumnType("int");

                    b.Property<int?>("codPostoAdm")
                        .HasColumnType("int");

                    b.Property<int?>("codProvincia")
                        .HasColumnType("int");

                    b.Property<int>("codUnidade")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("distrito")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estabEnsino")
                        .HasColumnType("bit");

                    b.Property<bool>("hospitalMilitar")
                        .HasColumnType("bit");

                    b.Property<string>("inseriu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("inseriuDataHora")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("localidade")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("organica")
                        .HasColumnType("int");

                    b.Property<string>("orgao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orgaoStamp")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("postoAdm")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("provincia")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalAlf")
                        .HasColumnType("int");

                    b.Property<int>("totalAlfMil")
                        .HasColumnType("int");

                    b.Property<int>("totalBrigadeiro")
                        .HasColumnType("int");

                    b.Property<int>("totalCap")
                        .HasColumnType("int");

                    b.Property<int>("totalCor")
                        .HasColumnType("int");

                    b.Property<int>("totalFur")
                        .HasColumnType("int");

                    b.Property<int>("totalGenEx")
                        .HasColumnType("int");

                    b.Property<int>("totalInt")
                        .HasColumnType("int");

                    b.Property<int>("totalMaj")
                        .HasColumnType("int");

                    b.Property<int>("totalMajGen")
                        .HasColumnType("int");

                    b.Property<int>("totalOf")
                        .HasColumnType("int");

                    b.Property<int>("totalOfGen")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSub")
                        .HasColumnType("int");

                    b.Property<int>("totalOfSup")
                        .HasColumnType("int");

                    b.Property<int>("totalPra")
                        .HasColumnType("int");

                    b.Property<int>("totalPriCab")
                        .HasColumnType("int");

                    b.Property<int>("totalPriSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSarg")
                        .HasColumnType("int");

                    b.Property<int>("totalSegCab")
                        .HasColumnType("int");

                    b.Property<int>("totalSegSar")
                        .HasColumnType("int");

                    b.Property<int>("totalSold")
                        .HasColumnType("int");

                    b.Property<int>("totalSub")
                        .HasColumnType("int");

                    b.Property<int>("totalTerSar")
                        .HasColumnType("int");

                    b.Property<int>("totalTte")
                        .HasColumnType("int");

                    b.Property<int>("totalTteCor")
                        .HasColumnType("int");

                    b.Property<int>("totalTteGen")
                        .HasColumnType("int");

                    b.Property<int>("totalTteMil")
                        .HasColumnType("int");

                    b.Property<bool>("unidSubordCentral")
                        .HasColumnType("bit");

                    b.HasKey("unidadeStamp");

                    b.HasIndex("orgaoStamp");

                    b.ToTable("Unidade");
                });

            modelBuilder.Entity("Model.Models.SJM.Usuario", b =>
                {
                    b.Property<string>("PaStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Activopa")
                        .HasColumnType("bit");

                    b.Property<string>("Alterou")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlterouDataHora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamentostamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direcaostamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EdaSic")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inseriu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InseriuDataHora")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Medico")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orgao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orgaostamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passwordexperaem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Patentetegoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriEntrada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TdocAniva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VerSitClass")
                        .HasColumnType("bit");

                    b.HasKey("PaStamp");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Model.Models.SJM.UsuarioSessao", b =>
                {
                    b.Property<string>("UsuarioSessaoStamp")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdaptadorRede")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataSessao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracaoHora")
                        .HasColumnType("int");

                    b.Property<int>("DuracaoMin")
                        .HasColumnType("int");

                    b.Property<int>("DuracaoSegundos")
                        .HasColumnType("int");

                    b.Property<string>("HoraSessaoEntrada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraSessaoSaida")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompletoComputador")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeComputador")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeUtilizador")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoComputador")
                        .IsRequired()
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WindowsEdition")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioSessaoStamp");

                    b.ToTable("UsuarioSessao");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Menu", b =>
                {
                    b.HasOne("Model.Models.Facturacao.MenuTag", "Badge")
                        .WithMany()
                        .HasForeignKey("BadgeStamp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Models.Facturacao.MenuTag", "Label")
                        .WithMany()
                        .HasForeignKey("LabelStamp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Models.Facturacao.MenuPermissions", "Permissions")
                        .WithMany()
                        .HasForeignKey("MenuPermissionsStamp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Badge");

                    b.Navigation("Label");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Model.Models.Facturacao.MenuChildrenItem", b =>
                {
                    b.HasOne("Model.Models.Facturacao.MenuPermissions", "Permissions")
                        .WithMany()
                        .HasForeignKey("MenuPermissionsStamp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Models.Facturacao.MenuChildrenItem", "ParentItem")
                        .WithMany("Children")
                        .HasForeignKey("ParentItemStamp")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Model.Models.Facturacao.Menu", "ParentMenu")
                        .WithMany("Children")
                        .HasForeignKey("ParentMenuStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentItem");

                    b.Navigation("ParentMenu");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("Model.Models.Facturacao.ParamImp", b =>
                {
                    b.HasOne("Model.Models.Facturacao.Param", "Param")
                        .WithMany("ParamImp")
                        .HasForeignKey("Paramstamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Param");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Paramemail", b =>
                {
                    b.HasOne("Model.Models.Facturacao.Param", "Param")
                        .WithMany("Paramemail")
                        .HasForeignKey("Paramstamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Param");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Paramgct", b =>
                {
                    b.HasOne("Model.Models.Facturacao.Param", "Param")
                        .WithMany("Paramgct")
                        .HasForeignKey("Paramstamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Param");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Parampv", b =>
                {
                    b.HasOne("Model.Models.Facturacao.Param", "Param")
                        .WithMany("Parampv")
                        .HasForeignKey("Paramstamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Param");
                });

            modelBuilder.Entity("Model.Models.Facturacao.UsuarioMenu", b =>
                {
                    b.HasOne("Model.Models.Facturacao.Menu", "Menu")
                        .WithMany("UsuarioMenus")
                        .HasForeignKey("MenuStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Models.SJM.Usuario", "Usuario")
                        .WithMany("UsuarioMenu")
                        .HasForeignKey("PaStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Model.Models.SGPM.Artigo", b =>
                {
                    b.HasOne("Model.Models.SGPM.ArtigoGeral", "ArtigoGeral1")
                        .WithMany("Artigo")
                        .HasForeignKey("artigoGeralStamp");

                    b.Navigation("ArtigoGeral1");
                });

            modelBuilder.Entity("Model.Models.SGPM.ArtigoContrato", b =>
                {
                    b.HasOne("Model.Models.SGPM.Artigo", "Artigo")
                        .WithMany("ArtigoContrato")
                        .HasForeignKey("artigoStamp");

                    b.HasOne("Model.Models.SGPM.Contrato", "Contrato")
                        .WithMany("ArtigoContrato")
                        .HasForeignKey("contratoStamp");

                    b.Navigation("Artigo");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("Model.Models.SGPM.Desconto", b =>
                {
                    b.HasOne("Model.Models.SGPM.MilSalario", "MilSalario")
                        .WithMany("Desconto")
                        .HasForeignKey("milStamp");

                    b.Navigation("MilSalario");
                });

            modelBuilder.Entity("Model.Models.SGPM.Email", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("Email")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.Entrada", b =>
                {
                    b.HasOne("Model.Models.SGPM.Existencia", "Existencia")
                        .WithMany("Entrada")
                        .HasForeignKey("existenciaStamp");

                    b.HasOne("Model.Models.SJM.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("unidadeStamp");

                    b.Navigation("Existencia");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("Model.Models.SGPM.Entrega", b =>
                {
                    b.HasOne("Model.Models.SGPM.Fornecimento", "Fornecimento")
                        .WithMany("Entrega")
                        .HasForeignKey("fornecimentoStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecimento");
                });

            modelBuilder.Entity("Model.Models.SGPM.Escalao", b =>
                {
                    b.HasOne("Model.Models.SJM.Pat", "Pat")
                        .WithMany()
                        .HasForeignKey("patStamp");

                    b.Navigation("Pat");
                });

            modelBuilder.Entity("Model.Models.SGPM.Existencia", b =>
                {
                    b.HasOne("Model.Models.SGPM.Artigo", "Artigo")
                        .WithMany("Existencia")
                        .HasForeignKey("artigoStamp");

                    b.Navigation("Artigo");
                });

            modelBuilder.Entity("Model.Models.SGPM.Fornecimento", b =>
                {
                    b.HasOne("Model.Models.SGPM.Existencia", "Existencia")
                        .WithMany("Fornecimento")
                        .HasForeignKey("existenciaStamp");

                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("Fornecimento")
                        .HasForeignKey("milStamp");

                    b.HasOne("Model.Models.SJM.Subunidade", "Subunidade")
                        .WithMany()
                        .HasForeignKey("subunidadeStamp");

                    b.HasOne("Model.Models.SJM.Unidade", "Unidade")
                        .WithMany("Fornecimento")
                        .HasForeignKey("unidadeStamp");

                    b.Navigation("Existencia");

                    b.Navigation("Mil");

                    b.Navigation("Subunidade");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilAgre", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilAgre")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilConde", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilConde")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilDoc", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilDoc")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilEmFor", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilEmFor")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilEmail", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilEmail")
                        .HasForeignKey("milStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilEspecial", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilEspecial")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilFa", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithOne("MilFa")
                        .HasForeignKey("Model.Models.SGPM.MilFa", "milStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilFor", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilFor")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilFot", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilFot")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilFuncao", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilFuncao")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilIDigital", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithOne("MilIDigital")
                        .HasForeignKey("Model.Models.SGPM.MilIDigital", "milStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilLice", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilLice")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilLingua", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilLingua")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilMed", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithOne("MilMed")
                        .HasForeignKey("Model.Models.SGPM.MilMed", "milStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilPeEmerg", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilPeEmerg")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilProm", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany()
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilRea", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilRea")
                        .HasForeignKey("milStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilReco", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilReco")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilReg", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilReg")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilRetReaSal", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilRetReaSal")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSa", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilSa")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSalMensal", b =>
                {
                    b.HasOne("Model.Models.SGPM.MilSalario", "MilSalario")
                        .WithMany("MilSalMensal")
                        .HasForeignKey("milStamp");

                    b.Navigation("MilSalario");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSalario", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithOne("MilSalario")
                        .HasForeignKey("Model.Models.SGPM.MilSalario", "milStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSit", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilSit")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSitCrim", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilSitCrim")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSitDisc", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilSitDisc")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSitQPActivo", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("MilSitQPActivo")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSubEspecial", b =>
                {
                    b.HasOne("Model.Models.SGPM.MilEspecial", "MilEspecial")
                        .WithMany("MilSubEspecial")
                        .HasForeignKey("milEspecialStamp");

                    b.Navigation("MilEspecial");
                });

            modelBuilder.Entity("Model.Models.SGPM.SubEspecial", b =>
                {
                    b.HasOne("Model.Models.SGPM.Especial", "Especial")
                        .WithMany("SubEspecial")
                        .HasForeignKey("especialStamp");

                    b.Navigation("Especial");
                });

            modelBuilder.Entity("Model.Models.SGPM.Subsidio", b =>
                {
                    b.HasOne("Model.Models.SGPM.MilSalario", "MilSalario")
                        .WithMany("Subsidio")
                        .HasForeignKey("milStamp");

                    b.Navigation("MilSalario");
                });

            modelBuilder.Entity("Model.Models.SGPM.Subunidade1", b =>
                {
                    b.HasOne("Model.Models.SJM.Subunidade", "Subunidade")
                        .WithMany("Subunidade1")
                        .HasForeignKey("subunidadeStamp");

                    b.Navigation("Subunidade");
                });

            modelBuilder.Entity("Model.Models.SGPM.Subunidade2", b =>
                {
                    b.HasOne("Model.Models.SGPM.Subunidade1", "Subunidade11")
                        .WithMany("Subunidade2")
                        .HasForeignKey("Subunidade11subunidade1Stamp");

                    b.Navigation("Subunidade11");
                });

            modelBuilder.Entity("Model.Models.SGPM.Suplemento", b =>
                {
                    b.HasOne("Model.Models.SGPM.MilSalario", "MilSalario")
                        .WithMany("Suplemento")
                        .HasForeignKey("milStamp");

                    b.Navigation("MilSalario");
                });

            modelBuilder.Entity("Model.Models.SGPM.Telefone", b =>
                {
                    b.HasOne("Model.Models.SGPM.Mil", "Mil")
                        .WithMany("Telefone")
                        .HasForeignKey("milStamp");

                    b.Navigation("Mil");
                });

            modelBuilder.Entity("Model.Models.SJM.Localidade", b =>
                {
                    b.HasOne("Model.Models.SJM.PostAdm", "PostAdm")
                        .WithMany("Localidade")
                        .HasForeignKey("postAdmStamp");

                    b.Navigation("PostAdm");
                });

            modelBuilder.Entity("Model.Models.SJM.PostAdm", b =>
                {
                    b.HasOne("Model.Models.SJM.Distrito", "Distrito")
                        .WithMany()
                        .HasForeignKey("distritoStamp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Distrito");
                });

            modelBuilder.Entity("Model.Models.SJM.Subunidade", b =>
                {
                    b.HasOne("Model.Models.SJM.Unidade", "Unidade")
                        .WithMany("Subunidade")
                        .HasForeignKey("unidadeStamp");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("Model.Models.SJM.Unidade", b =>
                {
                    b.HasOne("Model.Models.SJM.Orgao", "Orgao")
                        .WithMany("Uunidade")
                        .HasForeignKey("orgaoStamp");

                    b.Navigation("Orgao");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Menu", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("UsuarioMenus");
                });

            modelBuilder.Entity("Model.Models.Facturacao.MenuChildrenItem", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Model.Models.Facturacao.Param", b =>
                {
                    b.Navigation("ParamImp");

                    b.Navigation("Paramemail");

                    b.Navigation("Paramgct");

                    b.Navigation("Parampv");
                });

            modelBuilder.Entity("Model.Models.SGPM.Artigo", b =>
                {
                    b.Navigation("ArtigoContrato");

                    b.Navigation("Existencia");
                });

            modelBuilder.Entity("Model.Models.SGPM.ArtigoGeral", b =>
                {
                    b.Navigation("Artigo");
                });

            modelBuilder.Entity("Model.Models.SGPM.Contrato", b =>
                {
                    b.Navigation("ArtigoContrato");
                });

            modelBuilder.Entity("Model.Models.SGPM.Especial", b =>
                {
                    b.Navigation("SubEspecial");
                });

            modelBuilder.Entity("Model.Models.SGPM.Existencia", b =>
                {
                    b.Navigation("Entrada");

                    b.Navigation("Fornecimento");
                });

            modelBuilder.Entity("Model.Models.SGPM.Fornecimento", b =>
                {
                    b.Navigation("Entrega");
                });

            modelBuilder.Entity("Model.Models.SGPM.Mil", b =>
                {
                    b.Navigation("Email");

                    b.Navigation("Fornecimento");

                    b.Navigation("MilAgre");

                    b.Navigation("MilConde");

                    b.Navigation("MilDoc");

                    b.Navigation("MilEmFor");

                    b.Navigation("MilEmail");

                    b.Navigation("MilEspecial");

                    b.Navigation("MilFa");

                    b.Navigation("MilFor");

                    b.Navigation("MilFot");

                    b.Navigation("MilFuncao");

                    b.Navigation("MilIDigital");

                    b.Navigation("MilLice");

                    b.Navigation("MilLingua");

                    b.Navigation("MilMed");

                    b.Navigation("MilPeEmerg");

                    b.Navigation("MilRea");

                    b.Navigation("MilReco");

                    b.Navigation("MilReg");

                    b.Navigation("MilRetReaSal");

                    b.Navigation("MilSa");

                    b.Navigation("MilSalario");

                    b.Navigation("MilSit");

                    b.Navigation("MilSitCrim");

                    b.Navigation("MilSitDisc");

                    b.Navigation("MilSitQPActivo");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilEspecial", b =>
                {
                    b.Navigation("MilSubEspecial");
                });

            modelBuilder.Entity("Model.Models.SGPM.MilSalario", b =>
                {
                    b.Navigation("Desconto");

                    b.Navigation("MilSalMensal");

                    b.Navigation("Subsidio");

                    b.Navigation("Suplemento");
                });

            modelBuilder.Entity("Model.Models.SGPM.Subunidade1", b =>
                {
                    b.Navigation("Subunidade2");
                });

            modelBuilder.Entity("Model.Models.SJM.Orgao", b =>
                {
                    b.Navigation("Uunidade");
                });

            modelBuilder.Entity("Model.Models.SJM.PostAdm", b =>
                {
                    b.Navigation("Localidade");
                });

            modelBuilder.Entity("Model.Models.SJM.Subunidade", b =>
                {
                    b.Navigation("Subunidade1");
                });

            modelBuilder.Entity("Model.Models.SJM.Unidade", b =>
                {
                    b.Navigation("Fornecimento");

                    b.Navigation("Subunidade");
                });

            modelBuilder.Entity("Model.Models.SJM.Usuario", b =>
                {
                    b.Navigation("UsuarioMenu");
                });
#pragma warning restore 612, 618
        }
    }
}
